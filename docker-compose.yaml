version: "3.8"

services: 

  nginx:
    image: eztest-nginx
    build: 
      context: nginx
      dockerfile: ../dockerfiles/nginx.dockerfile
    ports: 
      - '8000:80'
    volumes: 
      - ./backend:/var/www/html
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on: 
      - backend
      - mysql
  
  backend:
    image: eztest-backend
    build:
      context: backend
      dockerfile: ../dockerfiles/backend.dockerfile
    volumes: 
      - ./backend:/var/www/html:delegated
      - ./backend/vendor:/var/www/html/vendor
  frontend:
    image: eztest-frontend
    build:
      context: frontend
      dockerfile: ../dockerfiles/frontend.dockerfile
    working_dir: /usr/src/app
    volumes: 
      - ./frontend/:/usr/src/app 
    ports: 
      - '4200:80'

  mysql:
    image: mysql:5.7
    environment:
      MYSQL_DATABASE: homestead
      MYSQL_USER: homestead
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_ROOT_HOST: '%'
      SERVICE_NAME: mysql
    volumes:
      - ./dbdata:/var/lib/mysql

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_ARBITRARY: 1
      PMA_USER: homestead
      PMA_PASSWORD: secret
      PMA_HOST: mysql
      PMA_PORT: 3306
    ports:
      - "7000:80"
    links:
      - mysql:mysql

  composer:
    build:
      context: composer
      dockerfile: ../dockerfiles/composer.dockerfile
    volumes: 
      - ./backend:/var/www/html

  artisan:
    build:
      context: backend
      dockerfile: ../dockerfiles/backend.dockerfile
    volumes: 
      - ./backend:/var/www/html
    entrypoint: ["php", "/var/www/html/artisan"]

  npm:
    image: node:14
    working_dir: /var/www/html
    entrypoint: ["npm"]
    volumes: 
      - ./backend:/var/www/html
